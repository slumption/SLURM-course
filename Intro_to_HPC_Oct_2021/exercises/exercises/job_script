#!/bin/bash

#!#############################################################
#!#### Modify the options in this section as appropriate ######
#!#############################################################

#! sbatch directives begin here ###############################
#! Name of the job:
#SBATCH -J trainingjob
#! How many whole nodes should be allocated?
#SBATCH --nodes=1
#! How many tasks will there be in total? (<=nodes*32)
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1  # Increase to increase cpus and memory.
#! How much wallclock time will be required?
#SBATCH --time=00:05:00   # DD-HH:MM:SS

#! These are special settings for the _training course_, so please don't change:
#SBATCH -A TRAINING-CPU
#SBATCH -p skylake
#SBATCH --reservation=training
#! sbatch directives end here (put any additional directives above this line)

#! Number of nodes and tasks per node allocated by SLURM stored in variables for later
#! use (do not change):
numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')

#! ############################################################
#! Modify the settings below to specify the application's environment, location 
#! and launch method:

#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel7/default-peta4            # REQUIRED - loads the basic environment
                                           # This line differs slightly according to the part of
                                           # the cluster being used (see the relevant template).

#! Insert additional module load commands after this line if needed:


#! Full path to application executable: 
application=""

#! Run options for the application:
options=""

#! Work directory (i.e. where the job will run):
workdir="$SLURM_SUBMIT_DIR"  # The value of SLURM_SUBMIT_DIR sets workdir to the directory
                             # in which sbatch is run.

#! Are you using OpenMP (NB this is unrelated to OpenMPI)? If so increase this
#! safe value to the number of cpus (cores) you are assuming per task (each OpenMP
#! thread usually requires its own cpu):
export OMP_NUM_THREADS=1

#! The launch command looks like this for either a non-parallel application or
#! a pure shared-memory OpenMP parallel program on a single node.
#! In both cases this is _one task_ which may require one or more cpus
#! (e.g. for memory reasons, or because it will create threads):
CMD="$application $options"

######################################################################
### This is the part of the script which launches the application ####
######################################################################

cd $workdir
echo -e "Changed directory to `pwd`.\n"

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

eval $CMD 

exit
